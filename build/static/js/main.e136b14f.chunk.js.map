{"version":3,"sources":["fbsetting.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","routes/Tweets.js","components/Tweetform.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","getAuth","db","getFirestore","getStorage","userObj","refreshUser","navigate","useNavigate","useState","editOn","setEditOn","displayName","newDisplayName","setNewDisplayName","getTweets","a","tweetRef","collection","q","query","where","uid","getDocs","forEach","doc","console","log","id","data","onSubmit","event","preventDefault","updateProfile","currentUser","useEffect","onClick","signOut","prev","placeholder","value","onChange","target","AuthForm","password","setPassword","email","setEmail","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","icon","faTwitter","type","required","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","faGoogle","faGithub","Tweets","tweetsObj","isOwner","isUpdate","setIsupdate","text","newTweet","setNewTweet","deleteTweets","window","confirm","deleteDoc","storage","attachmentUrl","targetFile","ref","deleteObject","toggleEditting","submitEdit","updateDoc","src","width","height","Tweetform","tweet","setTweet","attachment","setAttachment","fileinput","useRef","storageRef","v4","uploadString","response","getDownloadURL","addDoc","createdAt","Date","now","userid","clearAttachment","current","accept","file","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","tweets","setTweets","orderBy","onSnapshot","querySnapShot","newArray","docs","map","Navigation","to","AppRouter","isLoggedIn","path","element","Profile","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e136b14f.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getStorage } from \"firebase/storage\";\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_APIKEY,\r\n  authDomain: process.env.REACT_APP_AUTIDOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECTID,\r\n  storageBucket: process.env.REACT_APP_STIRAGEBUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGINGSENDERID,\r\n  appId: process.env.REACT_APP_APPID,\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nexport const authService = getAuth();\r\nexport const db = getFirestore();\r\nexport const storeage = getStorage(app);\r\nexport default app;\r\n","import { authService, db } from \"fbsetting\";\r\nimport { updateProfile } from \"firebase/auth\";\r\nimport { collection, getDocs, query, where } from \"firebase/firestore\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default ({ userObj, refreshUser }) => {\r\n  const navigate = useNavigate();\r\n  const [editOn, setEditOn] = useState(false);\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const clickLogOut = () => {\r\n    authService.signOut();\r\n    navigate(\"/\");\r\n  };\r\n  const getTweets = async () => {\r\n    const tweetRef = collection(db, \"tweets\");\r\n    const q = query(tweetRef, where(\"userid\", \"==\", userObj.uid));\r\n    const querySnapshot = await getDocs(q);\r\n    querySnapshot.forEach((doc) => {\r\n      console.log(doc.id, \" => \", doc.data());\r\n    });\r\n  };\r\n  const clickEdit = () => {\r\n    setEditOn((prev) => !prev);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await updateProfile(authService.currentUser, {\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n  const onChangeDisplayName = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n  useEffect(() => {\r\n    getTweets();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <button onClick={clickLogOut}>Log out</button>\r\n      <button onClick={clickEdit}>Edit profile</button>\r\n      {editOn ? (\r\n        <>\r\n          <form onSubmit={onSubmit}>\r\n            <input\r\n              placeholder=\"write your name\"\r\n              value={newDisplayName}\r\n              onChange={onChangeDisplayName}\r\n            ></input>\r\n            <button>submit</button>\r\n          </form>\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { authService } from \"fbsetting\";\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n} from \"firebase/auth\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nconst AuthForm = () => {\r\n  const [password, setPassword] = useState();\r\n  const [email, setEmail] = useState();\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState();\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        console.log(email, password);\r\n        data = await createUserWithEmailAndPassword(\r\n          authService,\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        data = await signInWithEmailAndPassword(authService, email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  const toggleAccount = () => {\r\n    setNewAccount((prev) => !prev);\r\n  };\r\n  return (\r\n    <div className=\"submit_container\">\r\n      <FontAwesomeIcon icon={faTwitter} className=\"twitter_icon\" />\r\n      <form onSubmit={onSubmit} className=\"submit_form\">\r\n        <input\r\n          placeholder=\"email\"\r\n          type=\"email\"\r\n          value={email}\r\n          required\r\n          onChange={onChange}\r\n          name=\"email\"\r\n          className=\"email_form\"\r\n        />\r\n        <input\r\n          placeholder=\"password\"\r\n          type=\"password\"\r\n          value={password}\r\n          required\r\n          onChange={onChange}\r\n          name=\"password\"\r\n          className=\"password_form\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value={newAccount ? \"create\" : \"login\"}\r\n          className=\"auth_submit_button\"\r\n        />\r\n        <span>{error}</span>\r\n      </form>\r\n      <span onClick={toggleAccount}>\r\n        {newAccount\r\n          ? \"you don't have account? click me and make account\"\r\n          : \"you already have account? click me and log in\"}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import {\r\n  GithubAuthProvider,\r\n  GoogleAuthProvider,\r\n  signInWithPopup,\r\n} from \"firebase/auth\";\r\nimport React from \"react\";\r\nimport { authService } from \"fbsetting\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGoogle } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new GithubAuthProvider();\r\n    }\r\n    await signInWithPopup(authService, provider);\r\n  };\r\n  return (\r\n    <div className=\"auth_container\">\r\n      <AuthForm />\r\n      <div className=\"auth_btns\">\r\n        <button name=\"google\" onClick={onSocialClick} className=\"google_btn\">\r\n          <FontAwesomeIcon icon={faGoogle} className=\"google_icon\" />\r\n          continue with google\r\n        </button>\r\n        <button name=\"github\" onClick={onSocialClick} className=\"github_btn\">\r\n          <FontAwesomeIcon icon={faGithub} className=\"github_icon\" />\r\n          continue with github\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;\r\n","import { db } from \"fbsetting\";\r\nimport { deleteDoc, doc, updateDoc } from \"firebase/firestore\";\r\nimport { deleteObject, getStorage, ref } from \"firebase/storage\";\r\nimport { useState } from \"react\";\r\n\r\nconst Tweets = ({ tweetsObj, isOwner }) => {\r\n  const [isUpdate, setIsupdate] = useState(false);\r\n  const [newTweet, setNewTweet] = useState(tweetsObj.text);\r\n  const deleteTweets = async (event) => {\r\n    const ok = window.confirm(\"you sure delte tweet?\");\r\n    if (ok) {\r\n      const target = doc(db, \"tweets\", `${tweetsObj.id}`);\r\n      await deleteDoc(target);\r\n      const storage = getStorage();\r\n      if (tweetsObj.attachmentUrl !== \"\") {\r\n        const targetFile = ref(storage, tweetsObj.attachmentUrl);\r\n        await deleteObject(targetFile);\r\n      }\r\n    }\r\n  };\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  const toggleEditting = () => {\r\n    setIsupdate((prev) => !prev);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewTweet(value);\r\n  };\r\n  const submitEdit = async () => {\r\n    const target = doc(db, \"tweets\", tweetsObj.id);\r\n    await updateDoc(target, {\r\n      text: newTweet,\r\n    });\r\n    toggleEditting();\r\n  };\r\n  return (\r\n    <div>\r\n      <h4>{tweetsObj.text}</h4>\r\n      {tweetsObj.attachmentUrl !== \"\" && (\r\n        <img src={tweetsObj.attachmentUrl} width={50} height={50}></img>\r\n      )}\r\n      {isOwner &&\r\n        (isUpdate ? (\r\n          <>\r\n            <form onSubmit={onSubmit}>\r\n              <input\r\n                type={\"text\"}\r\n                value={newTweet}\r\n                required\r\n                onChange={onChange}\r\n              ></input>\r\n              <button onClick={submitEdit}>change</button>\r\n              <button onClick={toggleEditting}>cancle</button>\r\n            </form>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <form onSubmit={onSubmit}>\r\n              <button onClick={deleteTweets}>delete</button>\r\n              <button onClick={toggleEditting}>edit</button>\r\n            </form>\r\n          </>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\nexport default Tweets;\r\n","import { db } from \"fbsetting\";\r\nimport { addDoc, collection } from \"firebase/firestore\";\r\nimport {\r\n  getDownloadURL,\r\n  getStorage,\r\n  ref,\r\n  uploadString,\r\n} from \"firebase/storage\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport { v4 } from \"uuid\";\r\n\r\nconst Tweetform = ({ userObj }) => {\r\n  const [tweet, setTweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const fileinput = useRef();\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const storage = getStorage();\r\n      const storageRef = ref(storage, `${userObj.uid}/${v4()}`);\r\n      const response = await uploadString(storageRef, attachment, \"data_url\");\r\n      console.log(response);\r\n      attachmentUrl = await getDownloadURL(response.ref);\r\n    }\r\n    try {\r\n      await addDoc(collection(db, \"tweets\"), {\r\n        text: tweet,\r\n        createdAt: Date.now(),\r\n        userid: userObj.uid,\r\n        attachmentUrl,\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n    setTweet(\"\");\r\n    clearAttachment();\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setTweet(value);\r\n  };\r\n  const uploadFile = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const file = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n  const clearAttachment = () => {\r\n    setAttachment(null);\r\n    fileinput.current.value = \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          value={tweet}\r\n          onChange={onChange}\r\n          placeholder=\"write your tweet\"\r\n          type={\"text\"}\r\n        />\r\n        <input\r\n          type={\"file\"}\r\n          accept=\"image/*\"\r\n          onChange={uploadFile}\r\n          placeholder=\"choose file\"\r\n          ref={fileinput}\r\n        />\r\n\r\n        {attachment && (\r\n          <div>\r\n            <img src={attachment} height={50} width={50}></img>\r\n            <button onClick={clearAttachment}>clear</button>\r\n          </div>\r\n        )}\r\n\r\n        <input type={\"submit\"} value={\"tweet\"} />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tweetform;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { authService, db } from \"fbsetting\";\r\n\r\nimport { collection, query, onSnapshot, orderBy } from \"firebase/firestore\";\r\nimport Tweets from \"./Tweets\";\r\n\r\nimport Tweetform from \"components/Tweetform\";\r\nconst Home = ({ userObj }) => {\r\n  const [tweets, setTweets] = useState([]);\r\n  useEffect(() => {\r\n    const q = query(collection(db, \"tweets\"), orderBy(\"createdAt\"));\r\n    const unscribe = onSnapshot(q, (querySnapShot) => {\r\n      const newArray = querySnapShot.docs.map((doc) => {\r\n        return {\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        };\r\n      });\r\n      setTweets(newArray);\r\n    });\r\n  }, []);\r\n  const clickLogOut = () => {\r\n    authService.signOut();\r\n  };\r\n  return (\r\n    <>\r\n      <span>Home</span>\r\n      <button onClick={clickLogOut}>Log out</button>\r\n      <Tweetform userObj={userObj} />\r\n      <div>\r\n        {tweets.map((tweet) => (\r\n          <Tweets\r\n            id={tweet.id}\r\n            tweetsObj={tweet}\r\n            isOwner={tweet.userid === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul>\r\n      <li>\r\n        <Link to=\"/\">Home</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/profile\">\r\n          {userObj.displayName\r\n            ? `${userObj.displayName}'s profile`\r\n            : \"make your name\"}\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\nexport default Navigation;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { HashRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport Profile from \"routes/Profile\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Routes>\r\n        {isLoggedIn ? (\r\n          <>\r\n            <Route path=\"/\" element={<Home userObj={userObj} />}></Route>\r\n            <Route\r\n              path=\"/profile\"\r\n              element={<Profile userObj={userObj} refreshUser={refreshUser} />}\r\n            ></Route>\r\n          </>\r\n        ) : (\r\n          <Route path=\"/\" element={<Auth />}></Route>\r\n        )}\r\n      </Routes>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import AppRouter from \"components/Router\";\nimport { useEffect, useState } from \"react\";\nimport { authService } from \"fbsetting\";\nimport { onAuthStateChanged, updateProfile } from \"firebase/auth\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    onAuthStateChanged(authService, (user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          email: user.email,\n          uid: user.uid,\n          updateProfile: (args) => {\n            updateProfile(authService.currentUser, {\n              displayName: user.displayName,\n            });\n          },\n        });\n        setIsLoggedIn(true);\n      } else {\n        setIsLoggedIn(false);\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      email: user.email,\n      uid: user.uid,\n      updateProfile: (args) => {\n        updateProfile(authService.currentUser, {\n          displayName: user.displayName,\n        });\n      },\n    });\n  };\n  return (\n    <div>\n      {console.log(isLoggedIn)}\n      {init ? (\n        <AppRouter\n          isLoggedIn={isLoggedIn}\n          userObj={userObj}\n          refreshUser={refreshUser}\n        />\n      ) : (\n        \"initalizing...\"\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"components/App\";\nimport app from \"fbsetting\";\n\nimport \"./styles.css\";\nconsole.log(app);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}